/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register User */
        post: operations["register_user_api_v1_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login For Access Token */
        post: operations["login_for_access_token_api_v1_auth_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/token/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh access token
         * @description Takes a valid refresh token and returns a new access and refresh token pair.
         */
        post: operations["refresh_access_token_api_v1_auth_token_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of all users (Admin only)
         * @description Retrieve a paginated list of all users.
         */
        get: operations["get_all_users_api_v1_users__get"];
        put?: never;
        /**
         * Create a new user (Admin only)
         * @description Create a new user with a specified role. This endpoint is restricted to admins.
         */
        post: operations["create_user_by_admin_api_v1_users__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single user by ID (Admin only)
         * @description Retrieve the details of a single user.
         */
        get: operations["get_user_by_id_api_v1_users__user_id__get"];
        /**
         * Update a user (Admin only)
         * @description Update a user's details, such as their username or role.
         */
        put: operations["update_user_api_v1_users__user_id__put"];
        post?: never;
        /**
         * Delete a user (Admin only)
         * @description Delete a user from the system.
         */
        delete: operations["delete_user_api_v1_users__user_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/medicines/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of all medicines
         * @description Retrieves a paginated list of all medicines with summary inventory data.
         */
        get: operations["get_all_medicines_api_v1_medicines__get"];
        put?: never;
        /**
         * Add a new medicine
         * @description Adds a new medicine to the inventory.
         */
        post: operations["add_new_medicine_api_v1_medicines__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/medicines/import": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Import medicines from CSV file
         * @description Imports medicine data from a CSV file. Each row should contain details for a new medicine
         *     or a new batch for an existing medicine.
         */
        post: operations["import_medicines_from_csv_api_v1_medicines_import_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/medicines/{medicine_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single medicine by ID
         * @description Retrieves the details of a single medicine, including all its batches.
         */
        get: operations["get_medicine_by_id_api_v1_medicines__medicine_id__get"];
        /**
         * Update a medicine
         * @description Update a medicine's details, such as name, brand, or form.
         */
        put: operations["update_medicine_api_v1_medicines__medicine_id__put"];
        post?: never;
        /**
         * Delete a medicine
         * @description Deletes a medicine and all its associated batches from the inventory.
         */
        delete: operations["delete_medicine_api_v1_medicines__medicine_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/medicines/{medicine_id}/batches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add a new batch to a medicine
         * @description Adds a new batch of stock to an existing medicine.
         */
        post: operations["add_new_batch_to_medicine_api_v1_medicines__medicine_id__batches_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/sales/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a list of all sales
         * @description Retrieves a paginated list of all sales transactions, ordered by the most recent first.
         */
        get: operations["get_all_sales_api_v1_sales__get"];
        put?: never;
        /**
         * Create a new sale
         * @description Processes a new sale transaction.
         *
         *     This endpoint takes a list of medicines and quantities, validates stock,
         *     updates the inventory (decrementing from batches expiring soonest first),
         *     and records the sale. The entire operation is a single database transaction.
         */
        post: operations["create_new_sale_api_v1_sales__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/sales/{sale_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a single sale by ID
         * @description Retrieves the details of a single sale, including all its line items.
         */
        get: operations["get_sale_by_id_api_v1_sales__sale_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get dashboard statistics
         * @description Retrieves aggregated statistics for the main dashboard.
         */
        get: operations["get_dashboard_stats_api_v1_dashboard_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/sales-stats/{period}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get sales statistics for a specific period
         * @description Retrieves total revenue and sales count for a given period:
         *     - **today**: Stats for the current day.
         *     - **last_7_days**: Stats for the last 7 days.
         *     - **last_30_days**: Stats for the last 30 days.
         */
        get: operations["get_sales_stats_api_v1_dashboard_sales_stats__period__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/inventory-summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a summary of inventory counts
         * @description Retrieves a summary of inventory:
         *     - **total_medicines**: Count of all unique medicines.
         *     - **low_stock_medicines**: Count of medicines with quantity below the threshold.
         *     - **expired_batches**: Count of expired medicine batches.
         *     - **out_of_stock_medicines**: Count of medicines with zero quantity.
         */
        get: operations["get_inventory_summary_api_v1_dashboard_inventory_summary_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/top-selling-products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get the top-selling products
         * @description Retrieves a list of the top-selling products by quantity sold.
         */
        get: operations["get_top_selling_products_api_v1_dashboard_top_selling_products_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/expiring-soon-batches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get batches expiring soon
         * @description Retrieves a list of medicine batches that will expire within a specified number of days.
         */
        get: operations["get_expiring_soon_batches_api_v1_dashboard_expiring_soon_batches_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/recent-sales": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get recent sales transactions
         * @description Retrieves a list of the most recent sales transactions.
         */
        get: operations["get_recent_sales_api_v1_dashboard_recent_sales_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/dashboard/sales-by-category": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get sales revenue by medicine category
         * @description Retrieves total sales revenue grouped by medicine category, sorted
         *     in descending order of revenue.
         */
        get: operations["get_sales_by_category_api_v1_dashboard_sales_by_category_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Root */
        get: operations["read_root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_import_medicines_from_csv_api_v1_medicines_import_post */
        Body_import_medicines_from_csv_api_v1_medicines_import_post: {
            /**
             * File
             * Format: binary
             * @description CSV file containing medicine data
             */
            file: string;
        };
        /** Body_login_for_access_token_api_v1_auth_token_post */
        Body_login_for_access_token_api_v1_auth_token_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /**
             * Password
             * Format: password
             */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /**
             * Client Secret
             * Format: password
             */
            client_secret?: string | null;
        };
        /**
         * CategoryEnum
         * @enum {string}
         */
        CategoryEnum: "Pain Relief" | "Antibiotics" | "Antiseptics" | "Vitamins & Supplements" | "Allergy & Hayfever" | "Cold & Flu" | "Digestive Health" | "Skin Care" | "Unassigned";
        /** DashboardStats */
        DashboardStats: {
            sales_today: components["schemas"]["SalesPeriodStats"];
            sales_last_7_days: components["schemas"]["SalesPeriodStats"];
            sales_last_30_days: components["schemas"]["SalesPeriodStats"];
            /** Inventory Summary */
            inventory_summary: {
                [key: string]: number;
            };
            /** Top Selling Products */
            top_selling_products: components["schemas"]["TopSellingProduct"][];
            /** Expiring Soon Batches */
            expiring_soon_batches: components["schemas"]["ExpiringSoonBatch"][];
            /** Sales By Category */
            sales_by_category: components["schemas"]["SalesByCategory"][];
            /** Recent Sales */
            recent_sales: components["schemas"]["RecentSale"][];
        };
        /** ExpiringSoonBatch */
        ExpiringSoonBatch: {
            /** Medicine Name */
            medicine_name: string;
            /** Brand */
            brand: string;
            /** Batch Number */
            batch_number: string | null;
            /**
             * Expiry Date
             * Format: date
             */
            expiry_date: string;
            /** Quantity */
            quantity: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** MedicineBatchCreate */
        MedicineBatchCreate: {
            /** Batch Number */
            batch_number?: string | null;
            /**
             * Expiry Date
             * Format: date
             */
            expiry_date: string;
            /** Cost Price */
            cost_price: number | string;
            /** Selling Price */
            selling_price: number | string;
            /**
             * Quantity
             * @description The initial quantity of the batch, must be positive.
             */
            quantity: number;
        };
        /** MedicineBatchPublic */
        MedicineBatchPublic: {
            /** Batch Number */
            batch_number?: string | null;
            /**
             * Expiry Date
             * Format: date
             */
            expiry_date: string;
            /** Cost Price */
            cost_price: string;
            /** Selling Price */
            selling_price: string;
            /** Id */
            id: number;
            /**
             * Date Added
             * Format: date-time
             */
            date_added: string;
            /** Is Expired */
            is_expired: boolean;
            /**
             * Quantity
             * @description The current quantity of the batch.
             */
            quantity: number;
        };
        /** MedicineCreate */
        MedicineCreate: {
            /** Name */
            name: string;
            /** Brand */
            brand: string;
            form: components["schemas"]["MedicineForm"];
            /** @default Unassigned */
            category: components["schemas"]["CategoryEnum"];
        };
        /**
         * MedicineForm
         * @enum {string}
         */
        MedicineForm: "TABLET" | "SYRUP" | "CAPSULE" | "INJECTION" | "OINTMENT" | "DROPS" | "OTHER";
        /** MedicineInList */
        MedicineInList: {
            /** Name */
            name: string;
            /** Brand */
            brand: string;
            form: components["schemas"]["MedicineForm"];
            /** @default Unassigned */
            category: components["schemas"]["CategoryEnum"];
            /** Id */
            id: number;
            /** Serial Number */
            serial_number: string;
            /** Total Quantity */
            total_quantity: number;
            /** Earliest Expiry */
            earliest_expiry: string | null;
        };
        /** MedicinePublic */
        MedicinePublic: {
            /** Name */
            name: string;
            /** Brand */
            brand: string;
            form: components["schemas"]["MedicineForm"];
            /** @default Unassigned */
            category: components["schemas"]["CategoryEnum"];
            /** Id */
            id: number;
            /** Serial Number */
            serial_number: string;
            /**
             * Batches
             * @default []
             */
            batches: components["schemas"]["MedicineBatchPublic"][];
            /** Total Quantity */
            total_quantity: number;
            /** Earliest Expiry */
            earliest_expiry: string | null;
        };
        /** MedicineUpdate */
        MedicineUpdate: {
            /** Name */
            name?: string | null;
            /** Brand */
            brand?: string | null;
            form?: components["schemas"]["MedicineForm"] | null;
            category?: components["schemas"]["CategoryEnum"] | null;
        };
        /**
         * PaymentMethod
         * @enum {string}
         */
        PaymentMethod: "CASH" | "MOMO";
        /** RecentSale */
        RecentSale: {
            /** Id */
            id: number;
            /**
             * Sale Date
             * Format: date-time
             */
            sale_date: string;
            /** Invoice Number */
            invoice_number: string;
            /** Total Amount */
            total_amount: string;
        };
        /** RefreshToken */
        RefreshToken: {
            /** Refresh Token */
            refresh_token: string;
        };
        /** SaleCreate */
        SaleCreate: {
            /** Items */
            items: components["schemas"]["SaleItemCreate"][];
            /** @default CASH */
            payment_method: components["schemas"]["PaymentMethod"];
        };
        /** SaleInList */
        SaleInList: {
            /** Id */
            id: number;
            /** Invoice Number */
            invoice_number: string;
            /**
             * Sale Date
             * Format: date-time
             */
            sale_date: string;
            /** Total Amount */
            total_amount: string;
            /** Sold By Username */
            sold_by_username: string;
        };
        /** SaleItemCreate */
        SaleItemCreate: {
            /** Medicine Id */
            medicine_id: number;
            /** Quantity */
            quantity: number;
        };
        /** SaleItemReceipt */
        SaleItemReceipt: {
            /** Medicine Name */
            medicine_name: string;
            /** Quantity */
            quantity: number;
            /** Unit Price */
            unit_price: string;
            /** Subtotal */
            subtotal: string;
        };
        /** SaleReceipt */
        SaleReceipt: {
            /** Id */
            id: number;
            /** Invoice Number */
            invoice_number: string;
            /**
             * Sale Date
             * Format: date-time
             */
            sale_date: string;
            /** Total Amount */
            total_amount: string;
            payment_method: components["schemas"]["PaymentMethod"];
            /** Sold By Username */
            sold_by_username: string;
            /** Items */
            items: components["schemas"]["SaleItemReceipt"][];
        };
        /** SalesByCategory */
        SalesByCategory: {
            /** Category Name */
            category_name: string;
            /** Total Revenue */
            total_revenue: string;
        };
        /** SalesPeriodStats */
        SalesPeriodStats: {
            /** Total Revenue */
            total_revenue: string;
            /** Sales Count */
            sales_count: number;
        };
        /** Token */
        Token: {
            /** Access Token */
            access_token: string;
            /** Refresh Token */
            refresh_token: string;
            /** Token Type */
            token_type: string;
            user_role: components["schemas"]["UserRole"];
        };
        /** TopSellingProduct */
        TopSellingProduct: {
            /** Medicine Id */
            medicine_id: number;
            /** Name */
            name: string;
            /** Brand */
            brand: string;
            /** Total Quantity Sold */
            total_quantity_sold: number;
        };
        /** UserCreate */
        UserCreate: {
            /** Full Name */
            full_name: string;
            /**
             * Password
             * @description Password must be at least 6 characters.
             */
            password: string;
        };
        /** UserCreateWithRole */
        UserCreateWithRole: {
            /** Full Name */
            full_name: string;
            /**
             * Password
             * @description Password must be at least 6 characters.
             */
            password: string;
            /** @default CASHIER */
            role: components["schemas"]["UserRole"];
        };
        /** UserPublic */
        UserPublic: {
            /** Full Name */
            full_name: string;
            /** Id */
            id: number;
            /** Username */
            username: string;
            role: components["schemas"]["UserRole"];
        };
        /**
         * UserRole
         * @enum {string}
         */
        UserRole: "ADMIN" | "MANAGER" | "CASHIER";
        /** UserUpdate */
        UserUpdate: {
            /** Username */
            username?: string | null;
            role?: components["schemas"]["UserRole"] | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    register_user_api_v1_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_for_access_token_api_v1_auth_token_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_api_v1_auth_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_access_token_api_v1_auth_token_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshToken"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_users_api_v1_users__get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_user_by_admin_api_v1_users__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreateWithRole"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_user_by_id_api_v1_users__user_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_api_v1_users__user_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_api_v1_users__user_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_medicines_api_v1_medicines__get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MedicineInList"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_new_medicine_api_v1_medicines__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MedicineCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MedicinePublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    import_medicines_from_csv_api_v1_medicines_import_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_import_medicines_from_csv_api_v1_medicines_import_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_medicine_by_id_api_v1_medicines__medicine_id__get: {
        parameters: {
            query?: {
                required_token_type?: string;
            };
            header?: never;
            path: {
                medicine_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MedicinePublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_medicine_api_v1_medicines__medicine_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                medicine_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MedicineUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MedicinePublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_medicine_api_v1_medicines__medicine_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                medicine_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    add_new_batch_to_medicine_api_v1_medicines__medicine_id__batches_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                medicine_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MedicineBatchCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MedicinePublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_all_sales_api_v1_sales__get: {
        parameters: {
            query?: {
                skip?: number;
                limit?: number;
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SaleInList"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_new_sale_api_v1_sales__post: {
        parameters: {
            query?: {
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SaleCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SaleReceipt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sale_by_id_api_v1_sales__sale_id__get: {
        parameters: {
            query?: {
                required_token_type?: string;
            };
            header?: never;
            path: {
                sale_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SaleReceipt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_dashboard_stats_api_v1_dashboard_stats_get: {
        parameters: {
            query?: {
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DashboardStats"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sales_stats_api_v1_dashboard_sales_stats__period__get: {
        parameters: {
            query?: {
                required_token_type?: string;
            };
            header?: never;
            path: {
                period: "today" | "last_7_days" | "last_30_days";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SalesPeriodStats"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_inventory_summary_api_v1_dashboard_inventory_summary_get: {
        parameters: {
            query?: {
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: number;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_top_selling_products_api_v1_dashboard_top_selling_products_get: {
        parameters: {
            query?: {
                limit?: number;
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopSellingProduct"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_expiring_soon_batches_api_v1_dashboard_expiring_soon_batches_get: {
        parameters: {
            query?: {
                limit?: number;
                days_ahead?: number;
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExpiringSoonBatch"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_recent_sales_api_v1_dashboard_recent_sales_get: {
        parameters: {
            query?: {
                limit?: number;
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecentSale"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_sales_by_category_api_v1_dashboard_sales_by_category_get: {
        parameters: {
            query?: {
                limit?: number;
                required_token_type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SalesByCategory"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
